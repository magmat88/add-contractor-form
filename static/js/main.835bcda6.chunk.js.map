{"version":3,"sources":["app/components/form/form.component.tsx","app/components/header/header.component.tsx","app/components/footer/footer.component.tsx","app/app.tsx","reportWebVitals.ts","index.tsx"],"names":["ContractorType","IdentificationType","Header","appName","appDescription","className","Footer","aboutPage","author","Form","formName","useState","contractorName","setContractorName","contractorSurname","setContractorSurname","NATURAL_PERSON","contractorType","setContractorType","contractorIdentification","setContractorIdentification","selectedPhoto","setSelectedPhoto","useEffect","identificationType","PESEL","NIP","id","action","method","htmlFor","type","name","placeholder","onChange","event","target","value","COMPANY","pattern","minLength","maxLength","accept","fileType","files","URL","createObjectURL","alert","src","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.835bcda6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './form.component.scss';\r\n\r\ninterface FormProps {\r\n    formName: string;\r\n}\r\n\r\nenum ContractorType {\r\n    NATURAL_PERSON = 'Osoba',\r\n    COMPANY = 'Firma',\r\n}\r\n\r\nenum IdentificationType {\r\n    PESEL = 'PESEL',\r\n    NIP = 'NIP',\r\n}\r\n\r\nexport function Form({ formName }: FormProps) {\r\n    const [contractorName, setContractorName] = useState<string>('');\r\n    const [contractorSurname, setContractorSurname] = useState<string>('');\r\n    const [contractorType, setContractorType] = useState<ContractorType>(\r\n        ContractorType.NATURAL_PERSON\r\n    );\r\n    const [contractorIdentification, setContractorIdentification] = useState<string>('');\r\n    const [selectedPhoto, setSelectedPhoto] = useState<string>('');\r\n\r\n    useEffect(() => {}, [contractorType, selectedPhoto]);\r\n\r\n    const identificationType =\r\n        contractorType === ContractorType.NATURAL_PERSON\r\n            ? IdentificationType.PESEL\r\n            : IdentificationType.NIP;\r\n\r\n    //any type - to change\r\n    function onChangeContractorName(\r\n        event: React.ChangeEvent<HTMLInputElement>\r\n    ) {\r\n        setContractorName(event.target.value);\r\n    }\r\n    function onSetContractorSurname(\r\n        event: React.ChangeEvent<HTMLInputElement>\r\n    ) {\r\n        setContractorSurname(event.target.value);\r\n    }\r\n    function onChangeContractorType(\r\n        event: React.ChangeEvent<HTMLSelectElement>\r\n    ) {\r\n        setContractorType(event.target.value as ContractorType);\r\n    }\r\n    function onChangeIdentification(\r\n        event: React.ChangeEvent<HTMLInputElement>\r\n    ) {\r\n        setContractorIdentification(event.target.value as IdentificationType);\r\n    }\r\n    function onChangePhoto(event: React.ChangeEvent<HTMLInputElement>) {\r\n        const fileType = event.target.files![0].type;\r\n        if (fileType === 'image/jpg' || fileType === 'image/jpeg') {\r\n            setSelectedPhoto(URL.createObjectURL(event.target.files![0]));\r\n        } else {\r\n            alert('Nieprawidłowy format pliku.');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <div className=\"form-header\">\r\n                <h2>{formName}</h2>\r\n                <p>\r\n                    <em>Proszę uzupełnić dane w poniższym formularzu.</em>\r\n                </p>\r\n            </div>\r\n\r\n            <form\r\n                className=\"form-container\"\r\n                id=\"add-contractor-form\"\r\n                action=\"./Contractor/Save\"\r\n                method=\"POST\"\r\n            >\r\n                <section className=\"form-section\">\r\n                    <label htmlFor=\"name\">\r\n                        Imię:\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"Wprowadź imię\"\r\n                            onChange={onChangeContractorName}\r\n                        />\r\n                    </label>\r\n                </section>\r\n\r\n                <section className=\"form-section\">\r\n                    <label htmlFor=\"surname\">\r\n                        Nazwisko:\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"surname\"\r\n                            placeholder=\"Wprowadź nazwisko\"\r\n                            onChange={onSetContractorSurname}\r\n                        />\r\n                    </label>\r\n                </section>\r\n\r\n                <section className=\"form-section\">\r\n                    <label htmlFor=\"contractorType\">\r\n                        Typ kontrahenta:\r\n                        <select\r\n                            value={contractorType}\r\n                            placeholder=\"Wybierz typ kontrahenta\"\r\n                            onChange={onChangeContractorType}\r\n                        >\r\n                            <option value={ContractorType.NATURAL_PERSON}>\r\n                                {ContractorType.NATURAL_PERSON}\r\n                            </option>\r\n                            <option value={ContractorType.COMPANY}>\r\n                                {ContractorType.COMPANY}\r\n                            </option>\r\n                        </select>\r\n                    </label>\r\n                </section>\r\n\r\n                <section className=\"form-section\">\r\n                    <label htmlFor=\"identification\">\r\n                        {identificationType}:\r\n                        <input\r\n                            type=\"text\"\r\n                            name={contractorIdentification}\r\n                            placeholder={`Wprowadź ${identificationType}`}\r\n                            pattern=\"[0-9]+\"\r\n                            minLength={\r\n                                identificationType! ===\r\n                                IdentificationType.NIP\r\n                                    ? 10\r\n                                    : 11\r\n                            }\r\n                            maxLength={\r\n                                identificationType! ===\r\n                                IdentificationType.NIP\r\n                                    ? 10\r\n                                    : 11\r\n                            }\r\n                            onChange={onChangeIdentification}\r\n                        />\r\n                    </label>\r\n                </section>\r\n\r\n                <section className=\"form-section\">\r\n                    <label htmlFor=\"photo\">\r\n                        {' '}\r\n                        Zdjęcie:\r\n                        <input\r\n                            type=\"file\"\r\n                            name=\"photo\"\r\n                            accept=\"image/jpg, image/jpeg\"\r\n                            onChange={onChangePhoto}\r\n                        />\r\n                    </label>\r\n                </section>\r\n            </form>\r\n\r\n            <div className=\"preview-container\">\r\n                <h2>Podgląd wprowadzonych danych:</h2>\r\n                <div className=\"text-preview-container\">\r\n                    <p>Imię: {contractorName}</p>\r\n                    <p>Nazwisko: {contractorSurname}</p>\r\n                    <p>Typ kontrahenta: {contractorType}</p>\r\n                    <p>{identificationType}: {contractorIdentification}</p>\r\n                    <p>Zdjęcie:</p>\r\n                </div>\r\n                <div className=\"img-preview-container\">\r\n                    {selectedPhoto && (\r\n                        <img\r\n                            src={selectedPhoto as string}\r\n                            alt=\"contractor img\"\r\n                            className=\"img-preview\"\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-section\">\r\n                <button>Zatwierdź</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import './header.component.scss';\n\ninterface HeaderProps {\n    appName: string;\n    appDescription: string;\n}\n\nexport const Header = ({appName, appDescription}: HeaderProps) => {\n    \n    return (\n        <div className=\"header-container\">\n            <div className=\"name-container\"><h1>{appName}</h1></div>\n            <div className=\"description-container\"><p>{appDescription}</p></div>\n        </div>\n    );\n}","import './footer.component.scss';\n\ninterface FooterProps {\n    aboutPage: string;\n    author: string;\n}\n\nexport const Footer = ({aboutPage, author}: FooterProps) => {\n    return (\n        <div className=\"footer-container\">\n            <div className=\"about-container\">{aboutPage}</div>\n            <div className=\"author-container\"><p>&copy; {author}</p></div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Header } from './components/header/header.component';\nimport { Footer } from './components/footer/footer.component';\nimport { Form } from './components/form/form.component';\nimport './app.scss';\n\nfunction App() {\n    return (\n        <div>\n            <Header appName={'Formularz dodawania kontrahenta'} appDescription={'Formularz z walidacją danych oraz podglądem zdjęcia.'} />\n            <Form formName={'Nowy kontrahent'} />\n            <Footer aboutPage={'Aplikacja stworzona z wykorzystaniem ReactJS oraz TypeScript. Style z wykorzystaniem SASS.'} author={'Magdalena Matusiak'} />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}